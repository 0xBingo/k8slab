# Default values for cloudflare-tunnel.

# Cloudflare parameters.
cloudflare:
  # Your Cloudflare account number.
  account: "4d31056d6b4bf143606ff3ca757e0b8c"
  # The name of the tunnel this instance will serve
  tunnelName: "{{ cloudflare_hostname_registry }}"
  # The ID of the above tunnel.
  tunnelId: "{{ tunnel_id }}"
  # The secret for the tunnel.
  secret: "{{ cloudflare_api_token }}"
  # If defined, no secret is created for the credentials, and instead, the secret referenced is used
  secretName: tunnel-credentials
  # If true, turn on WARP routing for TCP
  enableWarp: false
  # Define ingress rules for the tunnel. See
  # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/configuration-file/ingress
  ingress:
    - hostname: {{ cloudflare_hostname_registry }}
      service: {{ cloudflare_service }}

image:
  repository: cloudflare/cloudflared
  pullPolicy: IfNotPresent
  # If supplied, this overrides "appVersion"
  tag: "2024.9.1"

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

# Security items common to everything in the pod.  Here we require that it
# does not run as the user defined in the image, literally named "nonroot".
#podSecurityContext:
#  runAsGroup: 65532
#  runAsUser: 65532
#  runAsNonRoot: true
#  sysctls:
#  - name: net.ipv4.ping_group_range
#    value: "0           200000000"

# Security items for one container. We lock it down.
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

# Default affinity is to spread out over nodes; use this to override.
affinity: {}
